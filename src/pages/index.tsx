import { type NextPage } from "next";
import Head from "next/head";

// import { api } from "~/utils/api";

import Header from "../components/Header";
import SideBar from "../components/SideBar";
import sbrStyles from "../components/SideBar.module.css";
import FoodItemCard from "~/components/FoodItemCard.tsx";
import { useEffect, useRef, useState } from "react";
import { type FoodItem } from "@prisma/client";
import { useSideBar } from "../utils/SideBarProvider.tsx";
import { StackDivider, VStack, Progress } from "@chakra-ui/react";
import Announcement from "../components/Announcement.tsx";

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const sideBar = useSideBar();

  /** SideBar animation class */
  const classname = useRef("");

  const [mask, setMask] = useState(() => "");

  const [ announcemnet, SetAnnouncement] = useState(true);

  function handleHeaderTitleClick() {
    setFooditems([])
    SetAnnouncement(true)
  }

  /** 預設把遮罩關閉 */
  useEffect(() => {
    setMask("hidden");
  }, []);

  useEffect(() => {
    if (!sideBar && classname.current == "") {
      return;
    }

    if (!sideBar) {
      classname.current = sbrStyles["sidebar-animation-close"] as string;
      setMask("hidden");
    }

    // 反之已經關閉 給予開啟動畫
    if (sideBar) {
      classname.current = sbrStyles["sidebar-animation-open"] as string;
      setMask("block");
    }
  }, [sideBar]);

  /**
   * 主畫面菜單顯示
   * SideBar 點擊類別這裡會顯示菜單內容
   */
  const [fooditems, setFooditems] = useState<FoodItem[]>([]);

  const [progress, setProgress] = useState(false)

  /** SideBar onClick 呼叫這個函數顯示菜單 */
  const handleCategoryOnClick = (items: [FoodItem]) => {
    setFooditems(items);
    setProgress(false);
    SetAnnouncement(false);
    console.log("->>", fooditems);
  };

  return (
    <>
      <Head>
        <title>YUM YUM FOOD</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        id="menu-mask"
        className={`${mask} z-10 fixed inset-0 bg-slate-500/50`}
      >
      </div>
      <Header titleClick={handleHeaderTitleClick} />
      { progress && <Progress size='xs' isIndeterminate className="fixed top-16 z-50" /> }
      <SideBar
        onProgress={setProgress}
        categoryOnClick={handleCategoryOnClick}
        animationClassName={classname.current}
      />
      <main className="flex min-h-screen flex-col items-center justify-center bg-[#fff5ed]">
        <VStack
          h="auto"
          divider={<StackDivider borderColor="gray.200" />}
          spacing="20px;"
        >
          {fooditems.map((item) => {
            return (
              <FoodItemCard key={item.id} name={item.name} price={item.price} />
            );
          })}
          { announcemnet && <Announcement/>}

        </VStack>
      </main>
    </>
  );
};

export default Home;
