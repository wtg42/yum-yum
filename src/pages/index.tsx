import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";

import Header from "./Header";
import SideBar from "./SideBar";
import { useEffect, useState, useRef } from "react";
import { type FoodItem } from "@prisma/client";
import { useSideBar } from "../utils/SideBarProvider.tsx"
import sbrStyles from "./SideBar.module.css"

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const sideBar = useSideBar()
  /**
   * sidebar 的開關
   * Header 的 Icon 也可以打開 sidebar
   */
  // const [sideBar, setSideBar] = useState<boolean | undefined>();
  const [mask, setMask] = useState(() => "");
  const maskProps = {
    "mask": mask,
    "setMask": setMask,
  };

  /** 預設把遮罩關閉 */
  useEffect(() => {
    setMask((_prev) => {
      return "hidden";
    });
  }, []);

  useEffect(() => {
    if (!sideBar && classname.current == "") {
      return
    }

    if (!sideBar) {
      classname.current = sbrStyles["sidebar-animation-close"] as string;
      setMask('hidden')
    }

    // 反之已經關閉 給予開啟動畫
    if (sideBar) {
      classname.current = sbrStyles["sidebar-animation-open"] as string;
      setMask('block')
    }
  }, [sideBar])

  /** SideBar animation class */
  const classname = useRef("");

  /** 切換 SideBar */
  // const switchSideBar = () => {
  //   setSideBar((prev) => {
  //     // 初始值直接給予開啟動畫
  //     if (typeof prev == "undefined" || typeof sideBar == "undefined") {
  //       classname.current = sbrStyles["sidebar-animation-open"] as string;
  //       setMask('block')
  //       return true;
  //     }

  //     // 已經打開 故給予關閉動畫
  //     if (sideBar) {
  //       classname.current = sbrStyles["sidebar-animation-close"] as string;
  //       setMask('hidden')
  //     }

  //     // 反之已經關閉 給予開啟動畫
  //     if (!sideBar) {
  //       classname.current = sbrStyles["sidebar-animation-open"] as string;
  //       setMask('block')
  //     }

  //     return !prev;
  //   });
  // };

  /**
   * 主畫面菜單顯示
   * SideBar 點擊類別這裡會顯示菜單內容
   */
  const [fooditems, setFooditems] = useState<FoodItem[]>([]);

  /** SideBar onClick 呼叫上層這個函數顯示菜單 */
  const handleCategoryOnClick = (items: [FoodItem]) => {
    setFooditems(items);
    console.log("->>", fooditems);
  };

  return (
    <>
        <Head>
          <title>YUM YUM FOOD</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div
          id="menu-mask"
          className={`${mask} z-10 fixed inset-0 bg-slate-500/50`}
        >
        </div>
        <Header/>
        <SideBar
          categoryOnClick={handleCategoryOnClick}
          maskProps={maskProps}
          animationClassName={classname.current}
        />
        <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
          <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
              Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
            </h1>
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
              <Link
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                href="https://create.t3.gg/en/usage/first-steps"
                target="_blank"
              >
                <h3 className="text-2xl font-bold">First Steps →</h3>
                <div className="text-lg">
                  Just the basics - Everything you need to know to set up your
                  database and authentication.
                </div>
              </Link>
              <Link
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                href="https://create.t3.gg/en/introduction"
                target="_blank"
              >
                <h3 className="text-2xl font-bold">Documentation →</h3>
                <div className="text-lg">
                  Learn more about Create T3 App, the libraries it uses, and how
                  to deploy it.
                </div>
              </Link>
            </div>
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
          </div>
        </main>
    </>
  );
};

export default Home;
